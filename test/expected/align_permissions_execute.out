begin;
create user test_user;
create table test_table_n (col1 int4);
create table test_table_r (col1 int4);
grant select on test_table_r to test_user;
select gm_generate_current();
NOTICE:  table "grants_manager_old" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists grants_manager_old"
PL/pgSQL function gm_generate_current() line 12 at EXECUTE statement
NOTICE:  relation "grants_manager" does not exist, skipping
CONTEXT:  SQL statement "alter table if exists public.grants_manager rename to grants_manager_old"
PL/pgSQL function gm_generate_current() line 13 at EXECUTE statement
 gm_generate_current 
---------------------
 
(1 row)

select object_name, postgres, test_user from public.grants_manager
where
  (schema_name, object_type) = ('public', 'TABLE')
  and object_name in ('test_table_n', 'test_table_r')
;
 object_name  | postgres | test_user 
--------------+----------+-----------
 test_table_n | {}       | {}
 test_table_r | {}       | {r}
(2 rows)

update public.grants_manager set test_user = '{r, w, D}' where object_name = 'test_table_n';
update public.grants_manager set test_user = '{}' where object_name = 'test_table_r';
select object_name, postgres, test_user from public.grants_manager
where
  (schema_name, object_type) = ('public', 'TABLE')
  and object_name in ('test_table_n', 'test_table_r')
;
 object_name  | postgres | test_user 
--------------+----------+-----------
 test_table_n | {}       | {r,w,D}
 test_table_r | {}       | {}
(2 rows)

select gm_align_permissions(true);
 gm_align_permissions 
----------------------
 
(1 row)

select gm_align_permissions(false);
 gm_align_permissions 
----------------------
 
(1 row)

select gm_generate_current();
NOTICE:  table "grants_manager_old" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists grants_manager_old"
PL/pgSQL function gm_generate_current() line 12 at EXECUTE statement
 gm_generate_current 
---------------------
 
(1 row)

select object_name, postgres, test_user from public.grants_manager
where
  (schema_name, object_type) = ('public', 'TABLE')
  and object_name in ('test_table_n', 'test_table_r')
;
 object_name  | postgres | test_user 
--------------+----------+-----------
 test_table_r | {}       | {}
 test_table_n | {}       | {D,r,w}
(2 rows)

rollback;
